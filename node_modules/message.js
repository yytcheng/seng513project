/* 
 * message.js
 * the private messaging center module
 *
 * By: Tony Cheng
 */
 
var dbAccess = require('dbAccess'),
	util = require('util'),
	users = require('users');
 
var msg = function() {
	this.id;
	this.from;
	this.from_name;
	this.to;
	this.to_name;
	this.subject;
	this.date;
	this.body;
}

var msgListItem = function() {
	this.id;
	this.subject;
	this.user;
	this.user_name;
	this.date;
}

var sendMessage = exports.sendMessage = function(fromId, toId, subject, body, callback) {
	users.getUsernameFromId(fromId, function(error, fr_usr){
		if (error) callback(error);
		users.getUsernameFromId(toId, function(error, to_usr) {
			if (error) callback(error);
			dbAccess.create('inbox_msgs', {values:['from_id="'+fromId+'"', 
													'from_user="'+fr_usr+'"', 
													'to_id="'+toId+'"', 
													'to_user="'+to_usr+'"', 
													'subject="'+subject+'"', 
													'body="'+body+'"']}, function(error, rowId){
				if(error) {
					console.log("error inserting new row in inbox_msgs");
					if (callback instanceof Function) callback(error);
				}
				else {
					console.log("new message inserted into inbox_msg");
					// Now insert the same thing in the sent_msgs table
					dbAccess.create('sent_msgs', {values:['from_id="'+fromId+'"', 
															'from_user="'+fr_usr+'"', 
															'to_id="'+toId+'"', 
															'to_user="'+to_usr+'"',
															'subject="'+subject+'"', 
															'body="'+body+'"']}, function(error, rowId){
						if(error) {
							console.log("error inserting new row in sent_msgs");
							if (callback instanceof Function) callback(error);
						}
						else {
							console.log("new message inserted into sent_msg");
							if (callback instanceof Function) callback();
						}
					});
				}
			});
		});
	});
}

var deleteMessage = exports.deleteMessage = function(msgId, folderId, callback) {
	switch(folderId) {
	case 0: dbAccess.remove('inbox_msgs', { conditions:['id="'+msgId+'"'] }, function(error){
							if(error)
							{
								console.log("error deleting from inbox_msgs");
								if (callback instanceof Function) callback(error);
								else console.log("callback is not a valid function");
							}
							else
							{
								console.log("message successfully deleted from inbox_msgs");
							}
			});
			break;
	case 1: dbAccess.remove('sent_msgs', { conditions:['id="'+msgId+'"'] }, function(error){
							if(error)
							{
								console.log("error deleting from sent_msgs");
								if (callback instanceof Function) callback(error);
								else console.log("callback is not a valid function");
							}
							else
							{
								console.log("message successfully deleted from sent_msgs");
							}
			});
			break;
	default:
		console.log("unknown folderId error in deleteMessage");
		if (callback instanceof Function) callback('Error in messages.deleteMessage. Invalid folder id passed (' + folderId + ').');
	}
}

var getMessages = exports.getMessages = function(userId, folderId, callback) {
	// TODO: ensure the userid is valid
	switch(folderId) {
	case 0: dbAccess.find('inbox_msgs', { conditions:['to_id="'+userId+'"'], orderby:'sent_date desc'},
							function(error, results) {
								if(error)
								{
									console.log("error retrieving messages from inbox_msgs");
									if (callback instanceof Function) callback(error);
									else console.log("callback is not a valid function");
								}
								else
								{
									var ret = new Array();
									for(var i = 0; i < results.length; i++) {
										ret.push(new msgListItem());
										ret[i].id = results[i].id;
										ret[i].subject = results[i].subject;
										ret[i].user = results[i].from_id;
										ret[i].user_name = results[i].from_user;
										ret[i].date = results[i].sent_date;
									}
									if (callback instanceof Function) callback(undefined, ret);
									else console.log("callback is not a valid function");
								}
							});
			break;
	case 1: dbAccess.find('sent_msgs', { conditions:['from_id="'+userId+'"'], orderby:'sent_date desc'},
							function(error, results) {
								if(error)
								{
									console.log("error retrieving messages from sent_msgs");
									if (callback instanceof Function) callback(error);
									else console.log("callback is not a valid function");
								}
								else
								{
									var ret = new Array();
									for(var i = 0; i < results.length; i++) {
										ret.push(new msgListItem());
										ret[i].id = results[i].id;
										ret[i].subject = results[i].subject;
										ret[i].user = results[i].to_id;
										ret[i].user_name = results[i].to_user;
										ret[i].date = results[i].sent_date;
									}
									if (callback instanceof Function) callback(undefined, ret);
									else console.log("callback is not a valid function");
								}
							});
			break;
	default:
		console.log("unknown folderId error in getMessages");
		if (callback instanceof Function) callback('Error in messages.getMessages. Invalid folder id passed (' + folderId + ').');
	}
}

var getMessage = exports.getMessage = function(msgId, folderId, callback) {
util.log("folder" + folderId);
	// TODO: check that is a valid message id
	switch(folderId) {
	case '0': dbAccess.find('inbox_msgs', { conditions:['id="'+msgId+'"'], orderby:'sent_date desc'},
							function(error, results) {
								if(error)
								{
									console.log("error loading message from inbox_msgs");
									if (callback instanceof Function) callback(error);
									else console.log("callback is not a valid function");
								}
								else
								{
									var ret = new msg();
									ret.id = results[0].id;
									ret.from = results[0].from_id;
									ret.from_name = results[0].from_user;
									ret.to = results[0].to_id;
									ret.to_name = results[0].to_user;
									ret.subject = results[0].subject;
									ret.date = results[0].sent_date;
									ret.body = results[0].body;
									
									if (callback instanceof Function) callback(undefined, ret);
									else console.log("callback is not a valid function");
								}
							});
			break;
	case '1': dbAccess.find('sent_msgs', { conditions:['id="'+msgId+'"'], orderby:'sent_date desc'},
							function(error, results) {
								if(error)
								{
									console.log("error loading message from sent_msgs");
									if (callback instanceof Function) callback(error);
									else console.log("callback is not a valid function");
								}
								else
								{
									var ret = new msg();
									ret.id = results[0].id;
									ret.from = results[0].from_id;
									ret.from_name = results[0].from_user;
									ret.to = results[0].to_id;
									ret.to_name = results[0].to_user;
									ret.subject = results[0].subject;
									ret.date = results[0].sent_date;
									ret.body = results[0].body;
									
									if (callback instanceof Function) callback(undefined, ret);
									else console.log("callback is not a valid function");
								}
							});
			break;
	default:
		console.log("unknown folderId error in getMessage");
		if (callback instanceof Function) callback('Error in messages.getMessage. Invalid folder id passed (' + folderId + ').');
	}
}



/* simple testing */

/*
getUsername(1, function(result){
	console.log("username of #1 is "+result); // working
});*/
//sendMessage(1, 3, "hi 1-3", "testing sendMessage from 1-3"); // working
//deleteMessage(12, 0); // working
/*
getMessages(1, 1, function(res) {
	for(var i = 0; i < res.length; i++)
	console.log("getMessages: "+res[i].subject);
});

getMessage(11, 0, function(res) {
	console.log("getMessage: "+res['body']+"fromId: "+res['from']);
}); */
