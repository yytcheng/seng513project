var dbAccess = require('dbAccess');
var voteIssues = require('voteIssues').VoteIssues;
var url = require('url');
var g_UserId = -1; //User ID
var g_UserVote; //Whether Thumbs Up or Thumbs Down

var ViewIssue = exports.ViewIssue = function() {
};

/**
 * Send the HTML page to the client
 * @param response Response object to send the data
 * @param issue Issue to display
 */
function displayPage(response, issue) {
	return function(error, users)
	{
		var user = users[0];
		
		g_UserVote = -1; //Assume that the user hasn't voted initially
		
		//Check if the user has already voted
		var sqlAlreadyVoted = "SELECT * FROM votes WHERE user_id = " + g_UserId	 + " AND issue_id = " + issue['id'];

		dbAccess.runQuery(sqlAlreadyVoted, function(error, rows_vote)
		{	
		
			if (error) throw error;
			
			if (rows_vote.length == 1)
			{
				g_UserVote = rows_vote[0]['vote'];	
			}
			
			var likes = (issue.likes != null) ? issue.likes : 0;
			var dislikes = (issue.dislikes != null) ? issue.dislikes : 0;
			var total = likes + dislikes;
			var likePerc, dislikePerc;
						
			if (total == 0) {
				likePerc = 0;
				dislikePerc = 0;
			}
			else {
				likePerc = likes / total * 100;
				dislikePerc = dislikes / total * 100;
			}

			variables = {
				quickTaskButtons_partial: 'views/layouts/partials/quickTaskButtons_partial.html',
				quickTaskButtons: {id: issue.id},
			
				title: issue.title,
				created: issue.created,
				user: user,
				user_id: user.id,
				user_name: user.name,
				status: issue.status,
				location: issue.location,
				description: issue.description,
				link: issue.link,
				issue_id: issue.id,
				userHasVoted: g_UserVote != -1,
				userLiked: g_UserVote == 0,
				
				likecount: likes,
				dislikecount: dislikes,
				likepercentage: likePerc,
				dislikepercentage: dislikePerc
			}			
			
			response.render('views/viewIssue.html', variables);

		}); 
	};
}

/**
 * Retrieve the user corresponding to the issue
 * @param response Response object to send the data
 */
function findIssueCreator(response) {
	return function(error, rows) {
		if (error) throw error;
		var issue = rows[0];
		dbAccess.runQuery('SELECT * FROM users WHERE id=' + issue['user_id'], displayPage(response, issue));
	};
}

/**
 * Main function of the module
 * @param request Incoming request
 * @param response Response object to send the data
 */
ViewIssue.display = function(request, response) {
	var parsedURL = url.parse(request.url, true);
		
	// get logged-in user
	request.getUser(function(error, user){
		if(error) throw error;
		if (user)	g_UserId = user.id;
		var sqlQuery = 'SELECT * FROM issues WHERE id=' + parsedURL.query.id;
		dbAccess.runQuery(sqlQuery, findIssueCreator(response));
	});
};
